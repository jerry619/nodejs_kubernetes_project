apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "postgres.fullname" . }}-deployment
  labels:
    app.kubernetes.io/name: {{ include "nodejsapp.name" . }}
    app.kubernetes.io/env: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.deployment }}
  strategy:
    rollungUpdate:
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
  revisionHistoryLimit: {{ .revisionHistoryLimit }}
  minReadySeconds: {{ .minReadySeconds }}
  terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nodejsapp.name" . }}
      app.kubernetes.io/env: {{ .Release.Namespace }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nodejsapp.name" . }}
        app.kubernetes.io/env: {{ .Release.Namespace }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ include "nodejsapp.name" . }}-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range $key, $value := .Values.containerports }}
            - containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
              name: {{ $value.name }}
            {{- end }}
          env:
            - name: PORT
              value: "8080"
            - name: DB_PORT
              value: {{ .Values.db.port | quote }}
            - name: DB_HOST
              value: {{ .Release.Name }}-postgres-service
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: db
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-credentials
                  key: password
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.containerports.port1.name }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.containerports.port1.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
